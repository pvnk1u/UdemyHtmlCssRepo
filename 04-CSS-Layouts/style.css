* {
  /* border-top: #1098ad; */
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* body 元素是所有元素的父元素，所以其样式会被所有元素继承*/
body {
  color: #444;
  font-family: sans-serif;
  position: relative;
}

.container {
  /* 设置整个页面的宽度及使其水平居中显示,
  这样即使浏览器窗口变化，其也会不断调整位置使其自身一直居中显示
   */
  width: 1200px;
  margin: 0 auto;
}

.main-header {
  background-color: #f7f7f7;
  /* 设置元素内容盒元素边框间的填充 */
  /* padding: 20px;
  padding-left: 40px;
  padding-right: 40px; */
  padding: 20px 40px;
  margin-bottom: 60px;
  /* height: 80px; */
}

nav {
  font-size: 18px;
}

article {
  margin-bottom: 60px;
}

.post-header {
  margin-bottom: 40px;
}

aside {
  background-color: #f7f7f7;
  /* 表示上下边框样式为5像素宽度颜色为1098ad的实线边框 */
  border-top: 5px solid #1098ad;
  border-bottom: 5px solid #1098ad;
  padding: 50px 40px;
}

h1,
h2,
h3 {
  color: #1098ad;
}

h1 {
  font-size: 26px;
  text-transform: uppercase;
  font-style: italic;
}

h2 {
  font-size: 40px;
  margin-bottom: 30px;
}

h3 {
  font-size: 30px;
  margin-bottom: 30px;
  margin-top: 40px;
}

h4 {
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
  margin-bottom: 30px;
}

p {
  font-size: 22px;
  /* line-height default value is 1 */
  line-height: 1.5;
  margin-bottom: 15px;
}

ul,
ol {
  margin-left: 50px;
  margin-bottom: 20px;
}

li {
  /* li default font-size is 22 */
  font-size: 20px;
  /* 设置li元素的下外边距 */
  margin-bottom: 10px;
}

/* 设置li元素的最后一个的下外边距为0 */
li:last-child {
  margin-bottom: 0;
}

#author {
  font-style: italic;
  font-size: 18px;
}

#copyright {
  font-size: 16px;
}

.related-author {
  font-size: 18px;
  font-weight: bold;
}

.related {
  list-style: none;
  margin-left: 0;
}

li:first-child {
  font-weight: bold;
}

li:last-child {
  font-style: italic;
}

li:nth-child(2) {
  color: red;
}

a:link {
  color: #1098ad;
  /* 去除链接下划线 */
  text-decoration: none;
}

/* 访问过的链接状态*/
a:visited {
  color: #1098ad;
}

/* 链接鼠标悬停状态 */
a:hover {
  color: orangered;
  font-weight: bold;
  text-decoration: underline orange;
}

/* 链接点击状态*/
a:active {
  background-color: black;
  font-style: italic;
}

.post-img {
  width: 100%;
  height: auto;
}

nav a:link {
  /* background-color: orangered;
  margin: 20px;
  padding: 20px; */
  margin-right: 30px;
  /* 正常情况下margin-top对于行内元素a不生效，
  但是通过display设置为inline-block后可以使a元素在保持行内元素只占据
  需要的空间不换行的情况下使其可以具有块级元素的属性样式（如margin-top） */
  display: inline-block;
}

nav a:link:last-child {
  margin-right: 0;
}

button {
  font-size: 22px;
  padding: 20px;
  cursor: pointer;

  position: absolute;
  bottom: 50px;
  right: 50px;
}

/* 伪元素 */
/* 选中h1标题的第一个字符 */
h1::first-letter {
  font-style: normal;
  margin-right: 5px;
}

/* 选中所有p段落的第一行 */
/* p::first-line {
  color: red 
*/

/* 选择紧跟在h3标题后的第一个p兄弟元素的第一行 */
/* h3 + p::first-line {
  color: red;
} */

/* 使用伪元素在h2后边增加TOP标识
为了使伪元素相对于h2绝对定位，
需要将伪元素的父元素h2的定位改为relative
*/
h2 {
  position: relative;
}

h2::after {
  content: "TOP";
  background-color: #ffe70e;
  color: black;
  font-size: 16px;
  font-weight: bold;
  display: inline-block;
  position: absolute;
  padding: 5px 10px;
  top: -15px;
  right: -25px;
}

/* Resolving conflicts */
#copyright {
  color: red;
}

.copyright {
  color: blue;
}

.text {
  color: yellow;
}

footer p {
  color: green;
}

nav {
  font-size: 18px;
}

/* FLOAT */
/* .author-img {
  float: left;
  margin-bottom: 20px;
}

.author {
  float: left;
  margin-top: 10px;
  margin-left: 20px;
}

h1 {
  float: left;
}

nav {
  float: right;
}

.clear {
  clear: both;
}

article {
  width: 825px;
  float: left;
}

aside {
  width: 300px;
  float: right;
}

footer {
  clear: both;
} */

/**
* 使用flexbox实现与上面的float同样的一维布局效果
*/
.main-header {
  display: flex;
  /* 使main-header中的h1元素和nav元素水平对齐 */
  align-items: center;
  justify-content: space-between;
}

.author-box {
  display: flex;
  align-items: center;
}

.author {
  margin-bottom: 0;
  margin-left: 15px;
}

.related-post {
  display: flex;
  align-items: center;
  /* 设置内部弹性元素的间距 */
  gap: 20px;
  margin-bottom: 30px;
}

.related-link:link {
  font-size: 17px;
  font-weight: bold;
  font-style: normal;
  margin-bottom: 5px;
  display: block;
}

.related-author {
  margin-bottom: 0;
  font-size: 14px;
  font-weight: normal;
  font-style: italic;
}

.row {
  display: flex;
  gap: 75px;
  margin-bottom: 60px;
  /* 设置弹性容器内的各个元素辅轴对齐项目的方式 
  其默认值为stretch，即各个元素在辅轴上的宽度将以最长的一个元素为准，
  其他元素即使并没有那么大的空间，也将统一拉长到最大长度
  */
  align-items: flex-start;
}

article {
  /*
  下面的aside中已经设置好了aside元素的宽度，
  弹性容器本身也已经设置好了总宽度和弹性元素的间距，
  所以这里只需要设置article的flex值为1即代表article元素
  将尽可能占据弹性容器总宽度减去aside宽度和gap间距后剩余的宽度，
  而无需再手动计算指定article的宽度
  */
  flex: 1;
  margin-bottom: 0;
}

aside {
  /* 默认值0 
  flex-grow: 0;
  /* 默认值1 
  flex-shrink: 1;
  /* 默认值auto  用于设置弹性元素的大小
  flex-basis: auto;*/
  /* flex-basis: 200px; */
  /* flex-shrink: 0; */
  /* flex-grow: 1; */
  flex: 0 0 300px;
}
